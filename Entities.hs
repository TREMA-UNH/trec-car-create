{-# LANGUAGE OverloadedStrings #-}

module Entities (resolveEntities) where

import Data.Monoid
import Data.Char
import Numeric
import qualified Data.Text as T
import qualified Data.Text.Lazy as TL
import qualified Data.HashMap.Strict as M

resolveEntities :: T.Text -> T.Text
resolveEntities = TL.toStrict . go
  where
    go s
      | T.null s = ""
      | '&' /= T.head s
      = let (s', cand) = T.breakOn "&" s
        in TL.fromStrict s' <> go cand
    -- we have a candidate entity
    go s'
      | Just c <- M.lookup ent entities
      = TL.singleton c <> after

      | Just rest <- "#x" `T.stripPrefix` ent
      , (n, "") : _ <- readHex $ T.unpack rest
      = TL.singleton (chr n) <> after

      | Just rest <- "#" `T.stripPrefix` ent
      , (n, "") : _ <- readDec $ T.unpack rest
      = TL.singleton (chr n) <> after

      | otherwise
      = "&" <> go s
      where
        s     = T.tail s' -- drop &
        ent   = T.takeWhile (/= ';') $ T.take 8 s
        after = go $ T.drop 1 $ T.dropWhile (/= ';') s

entities :: M.HashMap T.Text Char
entities = M.fromList allEntities

allEntities :: [(T.Text, Char)]
allEntities =
    [ "quot"     .=    '"'
    , "amp"      .=    '&'
    , "apos"     .=    '\''
    , "lt"       .=    '<'
    , "gt"       .=    '>'
    , "nbsp"     .=    ' '
    , "iexcl"    .=    '¡'
    , "cent"     .=    '¢'
    , "pound"    .=    '£'
    , "curren"   .=    '¤'
    , "yen"      .=    '¥'
    , "brvbar"   .=    '¦'
    , "sect"     .=    '§'
    , "uml"      .=    '¨'
    , "copy"     .=    '©'
    , "ordf"     .=    'ª'
    , "laquo"    .=    '«'
    , "not"      .=    '¬'
    , "shy"      .=    'U'
    , "reg"      .=    '®'
    , "macr"     .=    '¯'
    , "deg"      .=    '°'
    , "plusmn"   .=    '±'
    , "sup2"     .=    '²'
    , "sup3"     .=    '³'
    , "acute"    .=    '´'
    , "micro"    .=    'µ'
    , "para"     .=    '¶'
    , "middot"   .=    '·'
    , "cedil"    .=    '¸'
    , "sup1"     .=    '¹'
    , "ordm"     .=    'º'
    , "raquo"    .=    '»'
    , "frac14"   .=    '¼'
    , "frac12"   .=    '½'
    , "frac34"   .=    '¾'
    , "iquest"   .=    '¿'
    , "Agrave"   .=    'À'
    , "Aacute"   .=    'Á'
    , "Acirc"    .=    'Â'
    , "Atilde"   .=    'Ã'
    , "Auml"     .=    'Ä'
    , "Aring"    .=    'Å'
    , "AElig"    .=    'Æ'
    , "Ccedil"   .=    'Ç'
    , "Egrave"   .=    'È'
    , "Eacute"   .=    'É'
    , "Ecirc"    .=    'Ê'
    , "Euml"     .=    'Ë'
    , "Igrave"   .=    'Ì'
    , "Iacute"   .=    'Í'
    , "Icirc"    .=    'Î'
    , "Iuml"     .=    'Ï'
    , "ETH"      .=    'Ð'
    , "Ntilde"   .=    'Ñ'
    , "Ograve"   .=    'Ò'
    , "Oacute"   .=    'Ó'
    , "Ocirc"    .=    'Ô'
    , "Otilde"   .=    'Õ'
    , "Ouml"     .=    'Ö'
    , "times"    .=    '×'
    , "Oslash"   .=    'Ø'
    , "Ugrave"   .=    'Ù'
    , "Uacute"   .=    'Ú'
    , "Ucirc"    .=    'Û'
    , "Uuml"     .=    'Ü'
    , "Yacute"   .=    'Ý'
    , "THORN"    .=    'Þ'
    , "szlig"    .=    'ß'
    , "agrave"   .=    'à'
    , "aacute"   .=    'á'
    , "acirc"    .=    'â'
    , "atilde"   .=    'ã'
    , "auml"     .=    'ä'
    , "aring"    .=    'å'
    , "aelig"    .=    'æ'
    , "ccedil"   .=    'ç'
    , "egrave"   .=    'è'
    , "eacute"   .=    'é'
    , "ecirc"    .=    'ê'
    , "euml"     .=    'ë'
    , "igrave"   .=    'ì'
    , "iacute"   .=    'í'
    , "icirc"    .=    'î'
    , "iuml"     .=    'ï'
    , "eth"      .=    'ð'
    , "ntilde"   .=    'ñ'
    , "ograve"   .=    'ò'
    , "oacute"   .=    'ó'
    , "ocirc"    .=    'ô'
    , "otilde"   .=    'õ'
    , "ouml"     .=    'ö'
    , "divide"   .=    '÷'
    , "oslash"   .=    'ø'
    , "ugrave"   .=    'ù'
    , "uacute"   .=    'ú'
    , "ucirc"    .=    'û'
    , "uuml"     .=    'ü'
    , "yacute"   .=    'ý'
    , "thorn"    .=    'þ'
    , "yuml"     .=    'ÿ'
    , "OElig"    .=    'Œ'
    , "oelig"    .=    'œ'
    , "Scaron"   .=    'Š'
    , "scaron"   .=    'š'
    , "Yuml"     .=    'Ÿ'
    , "fnof"     .=    'ƒ'
    , "circ"     .=    'ˆ'
    , "tilde"    .=    '˜'
    , "Alpha"    .=    'Α'
    , "Beta"     .=    'Β'
    , "Gamma"    .=    'Γ'
    , "Delta"    .=    'Δ'
    , "Epsilon"  .=    'Ε'
    , "Zeta"     .=    'Ζ'
    , "Eta"      .=    'Η'
    , "Theta"    .=    'Θ'
    , "Iota"     .=    'Ι'
    , "Kappa"    .=    'Κ'
    , "Lambda"   .=    'Λ'
    , "Mu"       .=    'Μ'
    , "Nu"       .=    'Ν'
    , "Xi"       .=    'Ξ'
    , "Omicron"  .=    'Ο'
    , "Pi"       .=    'Π'
    , "Rho"      .=    'Ρ'
    , "Sigma"    .=    'Σ'
    , "Tau"      .=    'Τ'
    , "Upsilon"  .=    'Υ'
    , "Phi"      .=    'Φ'
    , "Chi"      .=    'Χ'
    , "Psi"      .=    'Ψ'
    , "Omega"    .=    'Ω'
    , "alpha"    .=    'α'
    , "beta"     .=    'β'
    , "gamma"    .=    'γ'
    , "delta"    .=    'δ'
    , "epsilon"  .=    'ε'
    , "zeta"     .=    'ζ'
    , "eta"      .=    'η'
    , "theta"    .=    'θ'
    , "iota"     .=    'ι'
    , "kappa"    .=    'κ'
    , "lambda"   .=    'λ'
    , "mu"       .=    'μ'
    , "nu"       .=    'ν'
    , "xi"       .=    'ξ'
    , "omicron"  .=    'ο'
    , "pi"       .=    'π'
    , "rho"      .=    'ρ'
    , "sigmaf"   .=    'ς'
    , "sigma"    .=    'σ'
    , "tau"      .=    'τ'
    , "upsilon"  .=    'υ'
    , "phi"      .=    'φ'
    , "chi"      .=    'χ'
    , "psi"      .=    'ψ'
    , "omega"    .=    'ω'
    , "thetasym" .=    'ϑ'
    , "upsih"    .=    'ϒ'
    , "piv"      .=    'ϖ'
    , "ensp"     .=    ' '
    , "emsp"     .=    ' '
    , "thinsp"   .=    ' '
    , "zwnj"     .=    'U'
    , "zwj"      .=    'U'
    , "lrm"      .=    'U'
    , "rlm"      .=    'U'
    , "ndash"    .=    '–'
    , "mdash"    .=    '—'
    , "lsquo"    .=    '‘'
    , "rsquo"    .=    '’'
    , "sbquo"    .=    '‚'
    , "ldquo"    .=    '“'
    , "rdquo"    .=    '”'
    , "bdquo"    .=    '„'
    , "dagger"   .=    '†'
    , "Dagger"   .=    '‡'
    , "bull"     .=    '•'
    , "hellip"   .=    '…'
    , "permil"   .=    '‰'
    , "prime"    .=    '′'
    , "Prime"    .=    '″'
    , "lsaquo"   .=    '‹'
    , "rsaquo"   .=    '›'
    , "oline"    .=    '‾'
    , "frasl"    .=    '⁄'
    , "euro"     .=    '€'
    , "image"    .=    'ℑ'
    , "weierp"   .=    '℘'
    , "real"     .=    'ℜ'
    , "trade"    .=    '™'
    , "alefsym"  .=    'ℵ'
    , "larr"     .=    '←'
    , "uarr"     .=    '↑'
    , "rarr"     .=    '→'
    , "darr"     .=    '↓'
    , "harr"     .=    '↔'
    , "crarr"    .=    '↵'
    , "lArr"     .=    '⇐'
    , "uArr"     .=    '⇑'
    , "rArr"     .=    '⇒'
    , "dArr"     .=    '⇓'
    , "hArr"     .=    '⇔'
    , "forall"   .=    '∀'
    , "part"     .=    '∂'
    , "exist"    .=    '∃'
    , "empty"    .=    '∅'
    , "nabla"    .=    '∇'
    , "isin"     .=    '∈'
    , "notin"    .=    '∉'
    , "ni"       .=    '∋'
    , "prod"     .=    '∏'
    , "sum"      .=    '∑'
    , "minus"    .=    '−'
    , "lowast"   .=    '∗'
    , "radic"    .=    '√'
    , "prop"     .=    '∝'
    , "infin"    .=    '∞'
    , "ang"      .=    '∠'
    , "and"      .=    '∧'
    , "or"       .=    '∨'
    , "cap"      .=    '∩'
    , "cup"      .=    '∪'
    , "int"      .=    '∫'
    , "there4"   .=    '∴'
    , "sim"      .=    '∼'
    , "cong"     .=    '≅'
    , "asymp"    .=    '≈'
    , "ne"       .=    '≠'
    , "equiv"    .=    '≡'
    , "le"       .=    '≤'
    , "ge"       .=    '≥'
    , "sub"      .=    '⊂'
    , "sup"      .=    '⊃'
    , "nsub"     .=    '⊄'
    , "sube"     .=    '⊆'
    , "supe"     .=    '⊇'
    , "oplus"    .=    '⊕'
    , "otimes"   .=    '⊗'
    , "perp"     .=    '⊥'
    , "sdot"     .=    '⋅'
    , "lceil"    .=    '⌈'
    , "rceil"    .=    '⌉'
    , "lfloor"   .=    '⌊'
    , "rfloor"   .=    '⌋'
    , "lang"     .=    '〈'
    , "rang"     .=    '〉'
    , "loz"      .=    '◊'
    , "spades"   .=    '♠'
    , "clubs"    .=    '♣'
    , "hearts"   .=    '♥'
    , "diams"    .=    '♦'
    ]
  where x .= y = (x,y)
